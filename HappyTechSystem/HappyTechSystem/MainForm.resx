<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="menuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pb_logo.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        dhKVVJ8RvC4AAAAASUVORK5CYII=
</value>
  </data>
</root>